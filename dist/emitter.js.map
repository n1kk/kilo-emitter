{"version":3,"sources":["../Emitter.ts"],"names":[],"mappings":";;AAMA;IAIE,MAAM,CAAC,MAAM,CAAmB,MAAS;QACvC,IAAI,CAAC,EAAE,OAAe,EAAE,IAAI,CAAC;QAC7B,EAAE,CAAC,CAAC,MAAM,IAAI,OAAO,MAAM,KAAK,QAAQ,CAAC,CAAC,CAAC;YACzC,OAAO,GAAG,IAAI,OAAO,EAAE,CAAC;YACxB,CAAC,MAAM,EAAC,IAAI,EAAC,KAAK,EAAC,MAAM,EAAC,MAAM,EAAC,UAAU,CAAC;iBACzC,OAAO,CAAC,CAAC,MAAqB,EAAE,EAAE,GAAS,MAAO,CAAC,MAAM,CAAC,GAAG,OAAO,CAAC,MAAM,CAAC,CAAA,CAAC,CAAC,CAAC,CAAA;QACpF,CAAC;QACD,MAAM,CAAc,MAAM,CAAA;IAC5B,CAAC;IAID;QACE,IAAI,CAAC,IAAI,GAAG,EAAE,CAAA;IAChB,CAAC;IAEM,EAAE,CAAC,KAAa,EAAE,QAAkB,EAAE,OAAgB,EAAE,QAAiB;QAC9E,IAAI,SAAS,EAAE,MAAM,GAAG,IAAI,CAAC,IAAI,CAAC;QAClC,EAAE,CAAC,CAAC,KAAK,IAAI,QAAQ,CAAC,CAAC,CAAC;YACtB,QAAQ,CAAC,IAAI,GAAG,OAAO,CAAA;YACvB,EAAE,CAAC,CAAC,SAAS,GAAG,MAAM,CAAC,KAAK,CAAC,CAAC,CAAC,CAAC;gBAE9B,IAAI,CAAC,GAAG,CAAC,KAAK,EAAE,QAAQ,CAAC,CAAC;gBAG1B,EAAE,CAAC,CAAC,QAAQ,CAAC;oBACX,SAAS,CAAC,OAAO,CAAC,QAAQ,CAAC,CAAA;gBAC7B,IAAI;oBACF,SAAS,CAAC,IAAI,CAAC,QAAQ,CAAC,CAAA;YAC5B,CAAC;YAAC,IAAI,CAAC,CAAC;gBACN,SAAS,GAAe,CAAC,QAAQ,CAAC,CAAA;YACpC,CAAC;YACD,MAAM,CAAC,KAAK,CAAC,GAAG,SAAS,CAAA;QAC3B,CAAC;QACD,MAAM,CAAC,IAAI,CAAA;IACb,CAAC;IAEM,IAAI,CAAC,KAAa,EAAE,QAAkB,EAAE,OAAgB,EAAE,QAAiB;QAChF,EAAE,CAAC,CAAC,KAAK,IAAI,QAAQ,CAAC,CAAC,CAAC;YACtB,QAAQ,CAAC,KAAK,GAAG,IAAI,CAAA;YACrB,IAAI,CAAC,EAAE,CAAC,KAAK,EAAE,QAAQ,EAAE,OAAO,EAAE,QAAQ,CAAC,CAAA;QAC7C,CAAC;QACD,MAAM,CAAC,IAAI,CAAA;IACb,CAAC;IAEM,GAAG,CAAC,KAAc,EAAE,QAAmB;QAC5C,IAAI,CAAC,EAAE,SAAS,EAAE,MAAM,GAAG,SAAS,CAAC,MAAM,EAAE,MAAM,GAAG,IAAI,CAAC,IAAI,CAAA;QAC/D,EAAE,CAAC,CAAC,MAAM,KAAK,CAAC,CAAC,CAAC,CAAC;YACjB,IAAI,CAAC,IAAI,GAAG,EAAE,CAAA;QAChB,CAAC;QAAC,IAAI,CAAC,EAAE,CAAC,CAAC,MAAM,KAAK,CAAC,CAAC,CAAC,CAAC;YACxB,OAAO,MAAM,CAAC,KAAK,CAAC,CAAA;QACtB,CAAC;QAAC,IAAI,CAAC,CAAC;YACN,SAAS,GAAG,MAAM,CAAC,KAAK,CAAC,CAAA;YACzB,CAAC,GAAG,SAAS,CAAC,CAAC,CAAC,SAAS,CAAC,OAAO,CAAC,QAAQ,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAA;YAChD,EAAE,CAAC,CAAC,CAAC,GAAG,CAAC,CAAC,CAAC,CAAC,CAAC;gBACX,SAAS,CAAC,MAAM,CAAC,CAAC,EAAE,CAAC,CAAC,CAAA;gBACtB,EAAE,CAAC,CAAC,CAAC,SAAS,CAAC,MAAM,CAAC;oBACpB,OAAO,MAAM,CAAC,KAAK,CAAC,CAAA;YACxB,CAAC;QAEH,CAAC;QACD,MAAM,CAAC,IAAI,CAAC;IACd,CAAC;IAGM,IAAI,CAAC,KAAa,EAAuB,GAAG,IAAU;QAC3D,IAAI,CAAC,EAAE,QAAQ,EAAE,GAAG,EAIlB,SAAS,GAAG,IAAI,CAAC,IAAI,CAAC,KAAK,CAAC,CAAA;QAC9B,EAAE,CAAC,CAAC,SAAS,IAAI,CAAC,GAAG,GAAG,SAAS,CAAC,MAAM,CAAC,CAAC,CAAC,CAAC;YAE1C,SAAS,GAAG,SAAS,CAAC,KAAK,EAAE,CAAA;YAO7B,GAAG,CAAC,CAAC,CAAC,GAAG,CAAC,EAAE,CAAC,GAAG,GAAG,EAAE,CAAC,EAAE,EAAE,CAAC;gBACzB,QAAQ,GAAG,SAAS,CAAC,CAAC,CAAC,CAAA;gBAEvB,EAAE,CAAC,CAAC,QAAQ,CAAC,KAAK,CAAC,QAAQ,CAAC,IAAI,EAAE,IAAI,CAAC,KAAK,UAAU,CAAC;oBACrD,CAAC,GAAG,GAAG,CAAA;gBACT,EAAE,CAAC,CAAC,QAAQ,CAAC,KAAK,CAAC,CAAC,CAAC;oBACnB,IAAI,CAAC,GAAG,CAAC,KAAK,EAAE,QAAQ,CAAC,CAAA;oBACzB,OAAO,QAAQ,CAAC,KAAK,CAAA;gBACvB,CAAC;YACH,CAAC;QACH,CAAC;QACD,MAAM,CAAC,IAAI,CAAA;IACb,CAAC;IAEM,QAAQ,CAAC,KAAc,EAAE,QAAmB;QACjD,IAAI,SAAS,EAAE,OAAO,GAAG,SAAS,CAAC,MAAM,EAAE,MAAM,GAAG,IAAI,CAAC,IAAI,CAAA;QAC7D,EAAE,CAAC,CAAC,OAAO,CAAC,CAAC,CAAC;YACZ,EAAE,CAAC,CAAC,SAAS,GAAG,MAAM,CAAC,KAAK,CAAC,CAAC,CAAC,CAAC;gBAC9B,EAAE,CAAC,CAAC,OAAO,GAAG,CAAC,CAAC,CAAC,CAAC;oBAChB,MAAM,CAAC,SAAS,CAAC,OAAO,CAAC,QAAQ,CAAC,GAAG,CAAC,CAAC,CAAA;gBACzC,CAAC;gBAAC,IAAI,CAAC,CAAC;oBACN,MAAM,CAAC,IAAI,CAAA;gBACb,CAAC;YACH,CAAC;YAAC,IAAI,CAAC,CAAC;gBACN,MAAM,CAAC,KAAK,CAAA;YACd,CAAC;QACH,CAAC;QAAC,IAAI,CAAC,CAAC;YACN,MAAM,CAAC,CAAC,CAAC,MAAM,CAAC,mBAAmB,CAAC,MAAM,CAAC,CAAC,MAAM,CAAA;QACpD,CAAC;IACH,CAAC;CAEF;AAnHD,0BAmHC","file":"Emitter.js","sourcesContent":["export interface Listener extends Function {\n  $ctx ?: object;\n  $once ?: boolean;\n}\n\n\nexport default class Emitter {\n\n  //private static _n = Object.getOwnPropertyNames\n\n  static extend<T extends object>(target: T): T & Emitter {\n    let i, emitter:Emitter, keys;\n    if (target && typeof target === 'object') {\n      emitter = new Emitter();\n      ['$evt','on','off','once','emit','triggers']\n        .forEach((method: keyof Emitter) => { (<any>target)[method] = emitter[method] })\n    }\n    return <T & Emitter>target\n  }\n\n  private $evt: { [key: string]: Listener[] }\n\n  constructor() {\n    this.$evt = {}\n  }\n\n  public on(event: string, listener: Listener, context?: object, priority?:Boolean) {\n    let listeners, events = this.$evt;\n    if (event && listener) {\n      listener.$ctx = context\n      if (listeners = events[event]) {\n        // check and remove listener if it is already present\n        this.off(event, listener);\n        //listeners[priority ? 'push' : 'unshift'](listener)\n        //(priority ? listeners.push : listeners.unshift)(listener)\n        if (priority)\n          listeners.unshift(listener)\n        else\n          listeners.push(listener)\n      } else {\n        listeners = <Listener[]>[listener]\n      }\n      events[event] = listeners\n    }\n    return this\n  }\n\n  public once(event: string, listener: Listener, context?: object, priority?:Boolean) {\n    if (event && listener) {\n      listener.$once = true\n      this.on(event, listener, context, priority)\n    }\n    return this\n  }\n\n  public off(event?: string, listener?: Function) {\n    let i, listeners, argNum = arguments.length, events = this.$evt\n    if (argNum === 0) {\n      this.$evt = {}\n    } else if (argNum === 1) {\n      delete events[event]\n    } else {\n      listeners = events[event]\n      i = listeners ? listeners.indexOf(listener) : -1\n      if (i > -1) {\n        listeners.splice(i, 1)\n        if (!listeners.length)\n          delete events[event]\n      }\n\n    }\n    return this;\n  }\n\n  // for browser build ...args will be replaced with [].slice.call(arguments) for a smaller footprint\n  public emit(event: string /* IF NOT BROWSER */, ...args:any[] /**/) {\n    let i, listener, num,\n      /* IF BROWSER\n      args = arguments,\n      /**/\n      listeners = this.$evt[event]\n    if (listeners && (num = listeners.length)) {\n      // get copy in case of mutations\n      listeners = listeners.slice()\n      // skip slicing arguments if there's 1 or less to speed up\n      /* IF BROWSER\n      args = args.length > 1\n        ? [].slice.call(args, 1)\n        : []\n      /**/\n      for (i = 0; i < num; i++) {\n        listener = listeners[i]\n        // if listener returns \"stopEmit\" then do not invoke any other listeners\n        if (listener.apply(listener.$ctx, args) === \"stopEmit\")\n          i = num\n        if (listener.$once) {\n          this.off(event, listener)\n          delete listener.$once\n        }\n      }\n    }\n    return this\n  }\n\n  public triggers(event?: string, listener?: Function): boolean {\n    let listeners, argsNum = arguments.length, events = this.$evt\n    if (argsNum) {\n      if (listeners = events[event]) {\n        if (argsNum > 1) {\n          return listeners.indexOf(listener) > -1\n        } else {\n          return true\n        }\n      } else {\n        return false\n      }\n    } else {\n      return !!Object.getOwnPropertyNames(events).length\n    }\n  }\n\n}\n"],"sourceRoot":""}