export default class Emitter{static extend(t){let e;return t&&"object"==typeof t&&(e=new Emitter,["$evt","on","off","once","emit","triggers"].forEach(n=>{t[n]=e[n]})),t}constructor(){this.$evt={}}on(t,e,n,i){let r,s=this.$evt;return t&&e&&("boolean"==typeof n?(i=n,n=null):e.$ctx=n,(r=s[t])?(this.off(t,e),i?r.unshift(e):r.push(e)):r=[e],s[t]=r),this}once(t,e,n,i){return t&&e&&(e.$once=!0,this.on(t,e,n,i)),this}off(t,e){let n,i,r=arguments.length,s=this.$evt;return 0===r?this.$evt={}:1===r?delete s[t]:(n=(i=s[t])?i.indexOf(e):-1)>-1&&(i.splice(n,1),i.length||delete s[t]),this}emit(t,e){let n,i,r,s=this.$evt[t];if(s&&(r=s.length))for(s=s.slice(),n=0;n<r;n++)"stopEmit"===(i=s[n]).apply(i.$ctx,e)&&(n=r),i.$once&&(this.off(t,i),delete i.$once);return this}triggers(t,e){let n,i=arguments.length,r=this.$evt;return i?!!(n=r[t])&&(!(i>1)||n.indexOf(e)>-1):!!Object.getOwnPropertyNames(r).length}};