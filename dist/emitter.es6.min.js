export class Emitter{static extend(t){let e;return t&&"object"==typeof t&&(e=new Emitter,["$evt","on","off","once","emit","triggers"].forEach(i=>{t[i]=e[i]})),t}constructor(){this.$evt={}}on(t,e,i,n){let r,s=this.$evt;return t&&e&&(e.$ctx=i,(r=s[t])?(this.off(t,e),n?r.unshift(e):r.push(e)):r=[e],s[t]=r),this}once(t,e,i,n){return t&&e&&(e.$once=!0,this.on(t,e,i,n)),this}off(t,e){let i,n,r=arguments.length,s=this.$evt;return 0===r?this.$evt={}:1===r?delete s[t]:(i=(n=s[t])?n.indexOf(e):-1)>-1&&(n.splice(i,1),n.length||delete s[t]),this}emit(t){let e,i,n,r,s=arguments,h=this.$evt[t];if(h&&(r=h.length))for(h=h.slice(),s=s.length>1?[].slice.call(s,1):[],e=0;e<r&&(i=(n=h[e]).apply(n.$ctx,s),n.$once&&(this.off(t,n),delete n.$once),!1!==i);e++);return this}triggers(t,e){let i,n=arguments.length,r=this.$evt;return n?!!(i=r[t])&&(!(n>1)||i.indexOf(e)>-1):!!Object.getOwnPropertyNames(r).length}};