{"version":3,"sources":["../Emitter.ts"],"names":[],"mappings":"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","file":"Emitter.es3.umd.js","sourcesContent":["export interface Listener extends Function {\n  $ctx ?: object;\n  $once ?: boolean;\n}\n\n\nexport default class Emitter {\n\n  //private static _n = Object.getOwnPropertyNames\n\n  static extend<T extends object>(target: T): T & Emitter {\n    let i, emitter:Emitter, keys;\n    if (target && typeof target === 'object') {\n      emitter = new Emitter();\n      ['$evt','on','off','once','emit','triggers']\n        .forEach((method: keyof Emitter) => { (<any>target)[method] = emitter[method] })\n    }\n    return <T & Emitter>target\n  }\n\n  private $evt: { [key: string]: Listener[] }\n\n  constructor() {\n    this.$evt = {}\n  }\n\n  public on(event: string, listener: Listener, context?: object, priority?:Boolean) {\n    let listeners, events = this.$evt;\n    if (event && listener) {\n      listener.$ctx = context\n      if (listeners = events[event]) {\n        // check and remove listener if it is already present\n        this.off(event, listener);\n        //listeners[priority ? 'push' : 'unshift'](listener)\n        //(priority ? listeners.push : listeners.unshift)(listener)\n        if (priority)\n          listeners.unshift(listener)\n        else\n          listeners.push(listener)\n      } else {\n        listeners = <Listener[]>[listener]\n      }\n      events[event] = listeners\n    }\n    return this\n  }\n\n  public once(event: string, listener: Listener, context?: object, priority?:Boolean) {\n    if (event && listener) {\n      listener.$once = true\n      this.on(event, listener, context, priority)\n    }\n    return this\n  }\n\n  public off(event?: string, listener?: Function) {\n    let i, listeners, argNum = arguments.length, events = this.$evt\n    if (argNum === 0) {\n      this.$evt = {}\n    } else if (argNum === 1) {\n      delete events[event]\n    } else {\n      listeners = events[event]\n      i = listeners ? listeners.indexOf(listener) : -1\n      if (i > -1) {\n        listeners.splice(i, 1)\n        if (!listeners.length)\n          delete events[event]\n      }\n\n    }\n    return this;\n  }\n\n  // for browser build ...args will be replaced with [].slice.call(arguments) for a smaller footprint\n  public emit(event: string /* IF NOT BROWSER */, ...args:any[] /**/) {\n    let i, listener, num,\n      /* IF BROWSER\n      args = arguments,\n      /**/\n      listeners = this.$evt[event]\n    if (listeners && (num = listeners.length)) {\n      // get copy in case of mutations\n      listeners = listeners.slice()\n      // skip slicing arguments if there's 1 or less to speed up\n      /* IF BROWSER\n      args = args.length > 1\n        ? [].slice.call(args, 1)\n        : []\n      /**/\n      for (i = 0; i < num; i++) {\n        listener = listeners[i]\n        // if listener returns \"stopEmit\" then do not invoke any other listeners\n        if (listener.apply(listener.$ctx, args) === \"stopEmit\")\n          i = num\n        if (listener.$once) {\n          this.off(event, listener)\n          delete listener.$once\n        }\n      }\n    }\n    return this\n  }\n\n  public triggers(event?: string, listener?: Function): boolean {\n    let listeners, argsNum = arguments.length, events = this.$evt\n    if (argsNum) {\n      if (listeners = events[event]) {\n        if (argsNum > 1) {\n          return listeners.indexOf(listener) > -1\n        } else {\n          return true\n        }\n      } else {\n        return false\n      }\n    } else {\n      return !!Object.getOwnPropertyNames(events).length\n    }\n  }\n\n}\n"],"sourceRoot":""}